---
title: "OPTI-  Lab 4"
lang: es
author: 
  - Marcelino Sánchez Rodríguez 191654
date: today
format:
  pdf:
    latex_engine: xelatex
---

```{python}
# módulo de python: modulo_pcs
import numpy as np
def gradiente(fun,x):
    x = x.astype(float)
    h = 1e-5
    grad = np.zeros(len(x))
    fx = fun(x)
    for i in range(len(x)):
        x1 = x.copy()
        x1[i] = x1[i] + h
        grad[i] = (fun(x1) - fx)/h
    return grad

def fun(x):
    return -x[0]*x[1]*x[2] 

def h(x):
    return np.array([x[1]*x[2] + x[0]*x[1] + x[0]*x[1]])

```

```{python}
x = np.array([1,2,3])
grad_X = gradiente(fun,x)

grad_X
```

```{python}
def jacobian(h, x, h_=1e-7):
    n = len(x)
    m = len(h(x))
    jacobian = np.zeros((m, n))
    for j in range(n):
        x_plus_h = np.copy(x)
        x_plus_h[j] += h_
        x_minus_h = np.copy(x)
        x_minus_h[j] -= h_
        jacobian[:, j] = (h(x_plus_h) - h(x_minus_h)) / (2 * h_)
    return jacobian


```

```{python}
jacob_X = jacobian(h,x)
jacob_X
```